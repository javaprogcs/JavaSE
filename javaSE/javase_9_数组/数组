
简介

Java集合中最顶层的接口为Connection接口，其中有两个接口实现了Connection接口，分别为Set接口和List接口。
Set接口表现为无序，不能重复；List接口表现为有序，可重复。其中ArrayList和LisKedList接口的实现类中最常用的两个。
下面针对ArrayList和LinkedList这两个实现类做的一些说明：


（1）ArrayList:ArrayList是一个泛型类，底层采用数组结构保存对象。
 数组结构的优点：是便于对集合进行快速的随即访问（即如果需要经常根据索引位置访问集合中的对象。使用由ArrayList累实现的List集合的效率较好）

 数组结构的缺点：是向指定索引位置插入对象和删对象除

LinkedList常用方法

增加：
add(E e)：在链表后添加一个元素；   通用方法
addFirst(E e)：在链表头部插入一个元素；  特有方法
addLast(E e)：在链表尾部添加一个元素；  特有方法
push(E e)：与addFirst方法一致  
offer(E e)：在链表尾部插入一个元素                                                                                                                                                  add(int index, E element)：在指定位置插入一个元素。      
offerFirst(E e)：JDK1.6版本之后，在头部添加； 特有方法                                                                                                         offerLast(E e)：JDK1.6版本之后，在尾部添加； 特有方法

删除：
remove() ：移除链表中第一个元素;    通用方法  
remove(E e)：移除指定元素；   通用方法
removeFirst(E e)：删除头，获取元素并删除；  特有方法
removeLast(E e)：删除尾；  特有方法
pollFirst()：删除头；  特有方法
pollLast()：删除尾；  特有方法
pop()：和removeFirst方法一致，删除头。 
poll()：查询并移除第一个元素     特有方法    

查：
get(int index)：按照下标获取元素；  通用方法
getFirst()：获取第一个元素；  特有方法
getLast()：获取最后一个元素； 特有方法
peek()：获取第一个元素，但是不移除；  特有方法
peekFirst()：获取第一个元素，但是不移除； 
peekLast()：获取最后一个元素，但是不移除；
pollFirst()：查询并删除头；  特有方法
pollLast()：删除尾；  特有方法
poll()：查询并移除第一个元素     特有方法
